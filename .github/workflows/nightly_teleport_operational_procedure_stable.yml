---
name: Stable Teleport EKS Operational Procedure

on:
    schedule:
        - cron: 0 2 * * 2 # Every Tuesday at 02:00 UTC
    workflow_dispatch:
        inputs:
            helm-versions:
                description: The Helm versions to use as comma separated list
                type: string
            notify_back_error_message:
                description: Error message if retry was not successful. This parameter is used for internal call back actions.
                required: false
                default: ''
    pull_request:
        branches-ignore:
            - stable/**
        # For now limit automatic execution to a minimum, can always be done manually via workflow_dispatch for a branch
        paths:
            - .github/workflows/nightly_teleport_operational_procedure_stable.yml
            - .github/workflows/reusable_teleport_operational_procedure.yml
            - aws/dual-region/kubernetes/**
            - test/**

# limit to a single execution per ref (branch) of this workflow
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    triage:
        runs-on: ubuntu-latest
        steps:
            - name: Display notify_back_error_message if present
              if: ${{ inputs.notify_back_error_message != '' }}
              run: |
                  echo "A previous workflow failed but has attempted to retry: ${{ inputs.notify_back_error_message }}"
                  exit 1

    dynamic-matrix:
        runs-on: ubuntu-latest
        needs:
            - triage
        outputs:
            matrix: ${{ steps.generate-matrix.outputs.matrix }}
        steps:
            - name: Generate matrix
              id: generate-matrix
              run: |
                  # renovate: datasource=helm depName=camunda-platform registryUrl=https://helm.camunda.io versioning=regex:^11(\.(?<minor>\d+))?(\.(?<patch>\d+))?$
                  c86=11.2.2

                  if [ "${{ inputs.helm-versions }}" == "" ]; then
                    versions='{"helmChartVersion":["'${c86}'"]}'
                  else
                  output=$(echo "${{ inputs.helm-versions }}" | awk -F, '{
                      for(i=1;i<=NF;i++) {
                        if ($i ~ /^".*"$/) {
                          printf("%s%s", $i, (i==NF)?"":",")
                        } else {
                          printf("\"%s\"%s", $i, (i==NF)?"":",")
                        }
                      }
                    }')
                    versions='{"helmChartVersion":['${output}']}'
                  fi

                  echo "${versions}"
                  echo "matrix=${versions}" >> "$GITHUB_OUTPUT"


    operational-procedure:
        needs:
            - dynamic-matrix
        strategy:
            # parallelism is limited due to infra cluster resource constraints.
            # Once multiple versions are compatible with testing through teleport, investigate if increasing is possible.
            max-parallel: 1
            fail-fast: false
            matrix:
                helmChartVersion: ${{fromJson(needs.dynamic-matrix.outputs.matrix).helmChartVersion}}
        uses: ./.github/workflows/reusable_teleport_operational_procedure.yml
        with:
            helmChartVersion: ${{ matrix.helmChartVersion }}
            awsProfile: infex
            testsTfBinaryName: terraform
            namespacePrefix: infraex-
            clusterName: camunda-ci-eks
            labels: janitor/ttl=1h camunda.cloud/ephemeral=true
            cluster: camunda.teleport.sh-camunda-ci-eks
            backupBucket: tests-c8-multi-region-es-eu-central-1
            helmReleaseName: camunda
            zeebeClusterSize: 8
        secrets: inherit

    rerun-failed-jobs:
        if: failure() && fromJSON(github.run_attempt) < 3 && inputs.notify_back_error_message == ''
        runs-on: ubuntu-latest
        needs:
            - operational-procedure
        steps:
            - name: Retrigger job
              uses: camunda/infra-global-github-actions/rerun-failed-run@7b801f54b8d94e8c6a760feed5122ff4b5932283 # main
              with:
                  error-messages: |
                      PendingPodsError: Found
                  run-id: ${{ github.run_id }}
                  repository: ${{ github.repository }}
                  vault-addr: ${{ secrets.VAULT_ADDR }}
                  vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
                  vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
                  notify-back-on-error: 'true'


    notify-on-failure:
        runs-on: ubuntu-latest
        if: failure() && (fromJSON(github.run_attempt) >= 3 || inputs.notify_back_error_message != '') && github.event_name == 'schedule'
        needs:
            - operational-procedure
            - rerun-failed-jobs
        steps:
            - name: Notify in Slack in case of failure
              id: slack-notification
              uses: camunda/infraex-common-config/.github/actions/report-failure-on-slack@6dc218bf7ee3812a4b6b13c305bce60d5d1d46e5 # 1.3.1
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
