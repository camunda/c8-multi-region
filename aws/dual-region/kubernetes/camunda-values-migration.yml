---
# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml

# This is an example values.yml for a dual-region setup and might require resource tuning from your side

# !important
# This file is intended as an example for a 8.7 to 8.8 migration with dual-region setup and no identity / external oidc setup.

global:
    # Multiregion options for the Orchestration Cluster
    #
    ## WARNING: In order to get your multi-region setup covered by Camunda enterprise support
    # you MUST get your configuration and run books reviewed by Camunda before going to production.
    # This is necessary for us to be able to help you in case of outages,
    # due to the complexity of operating multi-region setups and the dependencies to the underlying Kubernetes prerequisites.
    # If you operate this in the wrong way you risk corruption and complete loss of all data especially in the dual-region case.
    # If you can, consider three regions. Please, contact your customer success manager as soon as you start planning a multi-region setup.
    # Camunda reserves the right to limit support if no review was done prior to launch or the review showed significant risks.
    multiregion:
        # number of regions that this Camunda Platform instance is stretched across
        regions: 2
    identity:
        auth:
            # Disable the Identity authentication
            # it will fall back to basic-auth: demo/demo as default user
            enabled: false

identity:
    enabled: false

identityKeycloak:
    enabled: false

optimize:
    enabled: false

connectors:
    image:
        tag: 8.8-SNAPSHOT # temporary fix for Helm Chart alpha snapshot usage
    enabled: true

orchestration:
    affinity:
        podAntiAffinity:      # temporary fix for the migration topics
    migration:
        data:
            enabled: true
    importer:
        enabled: true

    image:
        tag: 8.8-SNAPSHOT # temporary fix for Helm Chart alpha snapshot usage
    clusterSize: '8'
    partitionCount: '8'
    replicationFactor: '4'
    # Disable the Camunda and Zeebe exporters as we use region specific ones below
    exporters:
        camunda:
            enabled: false
        zeebe:
            enabled: false
    env:
        # Migration
        # TODO: remove - only needed for snapshot tests
        - name: CAMUNDA_SYSTEM_UPGRADE_ENABLEVERSIONCHECK
          value: 'false'
        # Need this for the importer since it's a standalone Gateway
        # While Orchestration Cluster is now embedded Gateway (ZEEBE_BROKER_GATEWAY vs ZEEBE_GATEWAY)
        - name: ZEEBE_GATEWAY_CLUSTER_MESSAGECOMPRESSION
          value: GZIP
        # Old Exporter
        - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCHREGION0_CLASSNAME
          value: io.camunda.zeebe.exporter.ElasticsearchExporter
        - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCHREGION0_ARGS_URL
          value: http://camunda-elasticsearch-master-hl.camunda-primary.svc.cluster.local:9200
        - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCHREGION1_CLASSNAME
          value: io.camunda.zeebe.exporter.ElasticsearchExporter
        - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCHREGION1_ARGS_URL
          value: http://camunda-elasticsearch-master-hl.camunda-secondary.svc.cluster.local:9200
        # Config
        - name: CAMUNDA_DATA_BACKUP_REPOSITORYNAME
          value: camunda_backup
        - name: CAMUNDA_PERSISTENT_SESSIONS_ENABLED
          value: 'true'
        - name: ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS
          value: PLACEHOLDER
        # Region 0 exporter config
        - name: ZEEBE_BROKER_EXPORTERS_CAMUNDAREGION0_CLASSNAME
          value: io.camunda.exporter.CamundaExporter
        - name: ZEEBE_BROKER_EXPORTERS_CAMUNDAREGION0_ARGS_CONNECT_URL
          value: http://camunda-elasticsearch-master-hl.camunda-primary.svc.cluster.local:9200
        # Region 1 exporter config
        - name: ZEEBE_BROKER_EXPORTERS_CAMUNDAREGION1_CLASSNAME
          value: io.camunda.exporter.CamundaExporter
        - name: ZEEBE_BROKER_EXPORTERS_CAMUNDAREGION1_ARGS_CONNECT_URL
          value: http://camunda-elasticsearch-master-hl.camunda-secondary.svc.cluster.local:9200
        # Zeebe cluster tuning
        - name: CAMUNDA_DATA_SNAPSHOTPERIOD
          value: 5m
        - name: ZEEBE_BROKER_CLUSTER_MEMBERSHIP_PROBETIMEOUT
          value: 500ms
        - name: ZEEBE_BROKER_CLUSTER_MEMBERSHIP_PROBEINTERVAL
          value: 2s
        - name: ZEEBE_BROKER_EXPERIMENTAL_RAFT_SNAPSHOTREQUESTTIMEOUT
          value: 10s
        - name: ZEEBE_BROKER_CLUSTER_MESSAGECOMPRESSION
          value: GZIP
        - name: ZEEBE_BROKER_GATEWAY_CLUSTER_MESSAGECOMPRESSION
          value: GZIP
        - name: ZEEBE_BROKER_GATEWAY_CLUSTER_MEMBERSHIP_PROBETIMEOUT
          value: 500ms
        - name: ZEEBE_BROKER_GATEWAY_CLUSTER_MEMBERSHIP_PROBEINTERVAL
          value: 2s
    pvcSize: 32Gi
    logLevel: ERROR

    resources:
        requests:
            cpu: 200m
            memory: 1Gi
        limits:
            cpu: 1512m
            memory: 3Gi

elasticsearch:
    enabled: true
    master:
        replicaCount: 2
        resources:
            requests:
                cpu: 0.1
                memory: 512M
            limits:
                cpu: 1
                memory: 2Gi
        persistence:
            size: 30Gi
    initScripts:
        init-keystore.sh: |
            #!/bin/bash
            set -e

            echo "Adding S3 access keys to Elasticsearch keystore..."

            # Add S3 client camunda keys to the keystore
            echo "$S3_SECRET_KEY" | elasticsearch-keystore add -x s3.client.camunda.secret_key
            echo "$S3_ACCESS_KEY" | elasticsearch-keystore add -x s3.client.camunda.access_key
    extraEnvVarsSecret: elasticsearch-env-secret
